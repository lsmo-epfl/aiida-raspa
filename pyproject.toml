[build-system]
requires = ['flit_core >=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-raspa'
dynamic = ['version']
description = 'AiiDA plugin for RASPA code'
authors = [
    { name = 'Aliaksandr Yakutovich', email = 'aliaksandr.yakutovich@epfl.ch' },
    { name = 'Miriam Pougin', email = 'miriam.pougin@epfl.ch' },
]
readme = 'README.md'
license = {file = 'LICENSE'}
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
keywords = ['aiida', 'workflows']
requires-python = '>=3.8'
dependencies = [
    'aiida_core[atomic_tools]~=2.3',
    'importlib_resources'
]

[project.urls]
Home = 'https://github.com/yakutovicha/aiida-raspa'
Source = 'https://github.com/yakutovicha/aiida-raspa'

[project.optional-dependencies]
tests = [
    'pgtest~=1.3',
    'pytest~=6.0'
]
pre-commit = [
    'pre-commit~=3.3',
    'black~=23.7',
    'isort~=5.12.0',
    'pylint~=2.17.0',
]
docs = [
    'sphinx',
    'sphinx-rtd-theme',
    'sphinxcontrib-contentui',
    'sphinxcontrib-details-directive',
]

[project.entry-points.'aiida.calculations']
'raspa' = 'aiida_raspa.calculations:RaspaCalculation'

[project.entry-points.'aiida.parsers']
'raspa' = 'aiida_raspa.parsers:RaspaParser'

[project.entry-points.'aiida.workflows']
'raspa.base' = 'aiida_raspa.workchains:RaspaBaseWorkChain'

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    'too-many-ancestors',
    'too-many-function-args',
    'duplicate-code',
    'import-outside-toplevel',
    'inconsistent-return-statements',
]
module-naming-style='any'

[tool.pytest.ini_options]
python_files = 'test_*.py'
python_functions = 'test_*'
filterwarnings = [
    'ignore::DeprecationWarning:aiida:',
    'ignore::DeprecationWarning:plumpy:',
    'ignore::DeprecationWarning:django:',
    'ignore::DeprecationWarning:frozendict:',
    'ignore::DeprecationWarning:sqlalchemy:',
    'ignore::DeprecationWarning:yaml:',
    'ignore::DeprecationWarning:pymatgen:',
]

[tool.pylint.basic]
good-names = [
    '_',
    'x',
    'y',
    'z',
    'i',
    'j',
    'k',
    'pk',
]
no-docstring-rgx = '^_,setUp,tearDown'
docstring-min-length = 5

[tool.isort]
profile = "black"
