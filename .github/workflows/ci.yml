name: Continuous Integration

on: [push, pull_request]

jobs:

  test-plugin:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:

    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # see https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#github-cache
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
        #    -
        #      name: Login to DockerHub
        #      uses: docker/login-action@v1
        #      with:
        #        username: ${{ secrets.DOCKERHUB_USERNAME }}
        #        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build #and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        load: true
        tags: aiida_raspa_test
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

          #- name: Install docker
          #  run: |
          #    sudo apt-get update
          #    sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
          #    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          #    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          #    sudo apt-get update
          #    sudo apt-get install docker-ce

          #- name: Build the Docker image
          #  run: |
          #    docker build -t aiida_raspa_test .

    - name: Run pre-commit
      run: |
        export DOCKERID=`docker run -d aiida_raspa_test`
        docker exec --tty $DOCKERID wait-for-services
        docker logs $DOCKERID
        docker exec --tty --user aiida $DOCKERID /bin/bash -l -c 'cd /opt/aiida-raspa/ && pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )'

    - name: Run tests
      run: |
        export DOCKERID=`docker run -d aiida_raspa_test`
        docker exec --tty --user aiida $DOCKERID /bin/bash -l -c 'cd /opt/aiida-raspa/ && py.test --cov aiida_raspa --cov-append .'

    - name: Run build docs
      run: |
        export DOCKERID=`docker run -d aiida_raspa_test`
        docker exec --tty --user aiida $DOCKERID /bin/bash -l -c 'cd /opt/aiida-raspa/docs && make'

  #  - docker exec -it --user aiida $DOCKERID /bin/bash -l -c 'cd /opt/aiida-raspa/ && pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )'
  #  - docker exec -it --user aiida $DOCKERID /bin/bash -l -c 'cd /opt/aiida-raspa/ && py.test --cov aiida_raspa --cov-append .'
  #  - docker exec -it --user aiida $DOCKERID /bin/bash -l -c 'cd /opt/aiida-raspa/docs && make'


        #after_script:
        #  - docker logs $DOCKERID

        #after_success:
        #  - docker exec -e TRAVIS=$TRAVIS -e TRAVIS_JOB_ID=$TRAVIS_JOB_ID -e TRAVIS_BRANCH=$TRAVIS_BRANCH -it --user aiida $DOCKERID /bin/bash -l -c 'cd code/aiida-raspa/ && coveralls'
